@model CCLRAbogados.Data.DynamicContent

@{
    ViewBag.Title = "Elemento";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section styles{
    @Styles.Render("~/Content/themes/admin/js/datatables/datatables.css")
    }
@if (Model == null || Model.IdDynamicContent ==0){
    <h2>Nuevo Elemento</h2>
    }
    else{<h2>Actualizar Elemento</h2>}

    @using (Html.BeginForm("addElement", "Admin", FormMethod.Post))
    {
    @Html.ValidationSummary(true)
    <div class="row m-b">
        <div class="col-xs-12 col-md-6">    
        @Html.Partial("_showAlertMessages")
        <section class="panel panel-default">
        <header class="panel-heading font-bold">Formulario de Registro</header>
        <div class="panel-body">
            <div class="form-group">
                <label>Titulo</label>
                @Html.TextBoxFor(u => u.Titulo, new { @class="form-control", @placeholder="Ingrese el título", @type="text", @maxlength="200"})
                @Html.ValidationMessageFor(u => u.Titulo)
            </div>
            <div class="form-group">
                <label>Descripción</label>
                @Html.TextAreaFor(u => u.Descripcion, new { @class="form-control", @placeholder="Ingrese una descripción corta", @type="text", @maxlength="300"})
                @Html.ValidationMessageFor(u => u.Descripcion)
            </div>
            <div class="form-group">
                <label>Ruta de enlace</label>
                @Html.TextBoxFor(u => u.Url, new { @class="form-control", @placeholder="Http://", @type="text", @maxlength="300"})
                @Html.ValidationMessageFor(u => u.Url)
            </div>
            <div class="line line-dashed line-lg pull-in"></div>
            <div class="form-group">
                
                <label>Tipo de Elemento</label>
                @Html.DropDownListFor(u => u.IdTipoDynamicContent, new SelectList(ViewBag.Categorias, "IdTipoDynamicContent", "Nombre", Model != null ? (Model.IdTipoDynamicContent != null ? Model.IdTipoDynamicContent : 0) : 0), new { @class="form-control parsley-validated"})
                @Html.ValidationMessageFor(u => u.IdTipoDynamicContent)
                
            </div>
            <div class="form-group">
                <label>Imagen</label>
                @Html.TextBoxFor(u => u.Imagen, new { @class="form-control", @placeholder="Http://", @type="text", @maxlength="50"})
                @Html.ValidationMessageFor(u => u.Imagen)
            </div>
            <div class="line line-dashed line-lg pull-in"></div>
            <div class="form-group row">
                <div class="col-md-3">
                    <label>Orden</label>
                    @Html.TextBoxFor(u => u.Orden, new { @class="form-control", @placeholder="1", @type="number", @min="1", @value="1"})
                    @Html.ValidationMessageFor(u => u.Orden)
                </div>
            </div>
            @if (ViewBag.EsAdmin && Model != null && Model.IdDynamicContent > 0){
            <div class="line line-dashed line-lg pull-in"></div>
            <div class="checkbox">
                <label>@Html.CheckBoxFor(u => u.Estado)
                    Activo</label>
                @Html.ValidationMessageFor(u => u.Estado)
            </div>}
            else{
                @Html.TextBoxFor(u => u.Estado, new { @value = Model != null ? Model.Estado : false, @type="hidden"})
            }
            <div class="line line-dashed line-lg pull-in"></div>
            @Html.TextBoxFor(u => u.IdDynamicContent, new { @value = Model != null ? Model.IdDynamicContent.ToString() : "", @type="hidden"})
            @{var btnName = (Model != null && Model.IdDynamicContent > 0) ? "Guardar Cambios" : "Crear";}
            <button type="submit" class="btn btn-sm btn-primary">@btnName</button>
            <a class="btn btn-sm btn-danger" href="@Url.Action("Home")">Salir</a>
        </div>
        </section>
        </div>
    </div>
    }